version: '3'

vars:
  SKU: "Standard_B4ls_v2"
  DEFAULT_COUNT: 3
  DEFAULT_TAG: "AppGateway for Containers Demo"
  DEFAULT_REGION: "canadacentral"
  DEPLOY_PROMETHEUS: true
  
tasks:
  default:
    desc: Calls `task --list` 
    cmds:
    - task --list

  register:
    desc: Registers the required RP for App Gateways for Containers
    cmds:
    #- az provider register --namespace Microsoft.ContainerService
    #- az provider register --namespace Microsoft.Network
    - az provider register --namespace Microsoft.NetworkFunction
    - az provider register --namespace Microsoft.ServiceNetworking
    - az extension add --name alb --allow-preview 
  up:
    desc: Creates a {{.TAGS}} 
    cmds:
    - terraform workspace new {{.REGION}} || true
    - terraform workspace select {{.REGION}}
    - terraform init
    - task: apply
      vars:
        REGION: '{{.REGION}}'
        TAGS: '{{.TAG_FOR_RUN}}'
        NODE_COUNT: '{{default .DEFAULT_COUNT .COUNT }}'
    - task: creds
    vars: 
      REGION: '{{default .DEFAULT_REGION (split " " .CLI_ARGS)._0}}'
      TAG_FOR_RUN: '{{default .DEFAULT_TAG .TAGS }}'
      NODE_COUNT: '{{default .DEFAULT_COUNT .COUNT }}'
      
  apply:
    desc: Applies the Terraform templates
    cmds:
    - terraform apply -auto-approve -compact-warnings
        -var "region={{.REGION}}" 
        -var "vm_size={{.SKU}}"
        -var "node_count={{.NODE_COUNT}}" 
        -var "tags={{.TAG_FOR_RUN}}" 
        -var "enable_managed_offerings={{.DEPLOY_PROMETHEUS}}" 
    vars: 
      REGION: '{{default .DEFAULT_REGION (split " " .CLI_ARGS)._0}}'
      NODE_COUNT: '{{default .DEFAULT_COUNT (split " " .CLI_ARGS)._1 }}'
      TAG_FOR_RUN: '{{default .DEFAULT_TAG (split " " .CLI_ARGS)._2 }}'

  refresh:
    desc: Applies the Terraform templates
    cmds:
    - terraform refresh
        -var "region={{.REGION}}" 
        -var "vm_size={{.SKU}}"
        -var "node_count={{.NODE_COUNT}}" 
        -var "tags={{.TAG_FOR_RUN}}" 
        -var "enable_managed_offerings={{.DEPLOY_PROMETHEUS}}" 
    vars: 
      REGION: '{{default .DEFAULT_REGION (split " " .CLI_ARGS)._0}}'
      NODE_COUNT: '{{default .DEFAULT_COUNT (split " " .CLI_ARGS)._1 }}'
      TAG_FOR_RUN: '{{default .DEFAULT_TAG (split " " .CLI_ARGS)._2 }}'

  creds:
    desc: Gets AKS credential file
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - sed -i s/devicecode/azurecli/g ~/.kube/config
    vars:
      RG: 
        sh: terraform output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform output -raw AKS_CLUSTER_NAME

  auth:
    desc: Update Deployment with Client ID of the APPGW IDENITTY
    cmds:
    - export APPGW_IDENITTY_CLIENT_ID="{{.APPGW_IDENITTY_CLIENT_ID}}" ;
      envsubst < cluster-config/gateways/config.tmpl > cluster-config/gateways/config.yaml
    - git add cluster-config/gateways/config.yaml
    - git commit -m "Updated Config values"
    - git push
    vars:
      APPGW_IDENITTY_CLIENT_ID: 
        sh: terraform output -raw APPGW_IDENITTY_CLIENT_ID

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="{{.TAG_FOR_DELETE}}" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n  || true
    - rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
    vars:
      TAG_FOR_DELETE: '{{default .DEFAULT_TAG .TAGS }}'
